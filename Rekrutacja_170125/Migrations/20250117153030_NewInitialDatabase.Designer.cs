// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Rekrutacja_170125.DatabaseContext;

#nullable disable

namespace Rekrutacja_170125.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20250117153030_NewInitialDatabase")]
    partial class NewInitialDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Rekrutacja_170125.Entities.ClientEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "City 1",
                            PostalCode = "11111",
                            Street = "Street 1"
                        },
                        new
                        {
                            Id = 2,
                            City = "City 2",
                            PostalCode = "22222",
                            Street = "Street 2"
                        },
                        new
                        {
                            Id = 3,
                            City = "City 3",
                            PostalCode = "33333",
                            Street = "Street 3"
                        },
                        new
                        {
                            Id = 4,
                            City = "City 4",
                            PostalCode = "44444",
                            Street = "Street 4"
                        },
                        new
                        {
                            Id = 5,
                            City = "City 5",
                            PostalCode = "55555",
                            Street = "Street 5"
                        },
                        new
                        {
                            Id = 6,
                            City = "City 6",
                            PostalCode = "66666",
                            Street = "Street 6"
                        },
                        new
                        {
                            Id = 7,
                            City = "City 7",
                            PostalCode = "77777",
                            Street = "Street 7"
                        },
                        new
                        {
                            Id = 8,
                            City = "City 8",
                            PostalCode = "88888",
                            Street = "Street 8"
                        },
                        new
                        {
                            Id = 9,
                            City = "City 9",
                            PostalCode = "99999",
                            Street = "Street 9"
                        },
                        new
                        {
                            Id = 10,
                            City = "City 10",
                            PostalCode = "10101",
                            Street = "Street 10"
                        });
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ShopId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClientId = 1,
                            PaymentMethod = 0,
                            ShopId = 1
                        },
                        new
                        {
                            Id = 2,
                            ClientId = 2,
                            PaymentMethod = 1,
                            ShopId = 2
                        },
                        new
                        {
                            Id = 3,
                            ClientId = 3,
                            PaymentMethod = 2,
                            ShopId = 3
                        },
                        new
                        {
                            Id = 4,
                            ClientId = 4,
                            PaymentMethod = 0,
                            ShopId = 4
                        },
                        new
                        {
                            Id = 5,
                            ClientId = 5,
                            PaymentMethod = 1,
                            ShopId = 5
                        },
                        new
                        {
                            Id = 6,
                            ClientId = 6,
                            PaymentMethod = 2,
                            ShopId = 6
                        },
                        new
                        {
                            Id = 7,
                            ClientId = 7,
                            PaymentMethod = 0,
                            ShopId = 7
                        },
                        new
                        {
                            Id = 8,
                            ClientId = 8,
                            PaymentMethod = 1,
                            ShopId = 8
                        },
                        new
                        {
                            Id = 9,
                            ClientId = 9,
                            PaymentMethod = 2,
                            ShopId = 9
                        },
                        new
                        {
                            Id = 10,
                            ClientId = 10,
                            PaymentMethod = 0,
                            ShopId = 10
                        });
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.OrderProductEntity", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProducts");

                    b.HasData(
                        new
                        {
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 2,
                            ProductId = 2,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 3,
                            ProductId = 10,
                            Quantity = 5
                        },
                        new
                        {
                            OrderId = 4,
                            ProductId = 5,
                            Quantity = 1
                        },
                        new
                        {
                            OrderId = 5,
                            ProductId = 3,
                            Quantity = 2
                        },
                        new
                        {
                            OrderId = 6,
                            ProductId = 4,
                            Quantity = 5
                        },
                        new
                        {
                            OrderId = 7,
                            ProductId = 3,
                            Quantity = 3
                        },
                        new
                        {
                            OrderId = 8,
                            ProductId = 2,
                            Quantity = 5
                        },
                        new
                        {
                            OrderId = 9,
                            ProductId = 3,
                            Quantity = 4
                        },
                        new
                        {
                            OrderId = 10,
                            ProductId = 1,
                            Quantity = 5
                        });
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("GrossPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("NetPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GrossPrice = 123.0m,
                            Name = "P001",
                            NetPrice = 100.0m
                        },
                        new
                        {
                            Id = 2,
                            GrossPrice = 246.0m,
                            Name = "P002",
                            NetPrice = 200.0m
                        },
                        new
                        {
                            Id = 3,
                            GrossPrice = 184.5m,
                            Name = "P003",
                            NetPrice = 150.0m
                        },
                        new
                        {
                            Id = 4,
                            GrossPrice = 221.4m,
                            Name = "P004",
                            NetPrice = 180.0m
                        },
                        new
                        {
                            Id = 5,
                            GrossPrice = 307.5m,
                            Name = "P005",
                            NetPrice = 250.0m
                        },
                        new
                        {
                            Id = 6,
                            GrossPrice = 147.6m,
                            Name = "P006",
                            NetPrice = 120.0m
                        },
                        new
                        {
                            Id = 7,
                            GrossPrice = 98.4m,
                            Name = "P007",
                            NetPrice = 80.0m
                        },
                        new
                        {
                            Id = 8,
                            GrossPrice = 233.7m,
                            Name = "P008",
                            NetPrice = 190.0m
                        },
                        new
                        {
                            Id = 9,
                            GrossPrice = 270.6m,
                            Name = "P009",
                            NetPrice = 220.0m
                        },
                        new
                        {
                            Id = 10,
                            GrossPrice = 159.9m,
                            Name = "P010",
                            NetPrice = 130.0m
                        });
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.ShopEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sklep 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sklep 2"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sklep 3"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Sklep 4"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sklep 5"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sklep 6"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sklep 7"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Sklep 8"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sklep 9"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Sklep 10"
                        });
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.OrderEntity", b =>
                {
                    b.HasOne("Rekrutacja_170125.Entities.ClientEntity", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rekrutacja_170125.Entities.ShopEntity", "Shop")
                        .WithMany("Orders")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.OrderProductEntity", b =>
                {
                    b.HasOne("Rekrutacja_170125.Entities.OrderEntity", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Rekrutacja_170125.Entities.ProductEntity", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.ProductEntity", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("Rekrutacja_170125.Entities.ShopEntity", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
